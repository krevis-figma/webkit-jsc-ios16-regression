From 165e717ddb5b99af7e33cfbb8d404cbc96fc2d22 Mon Sep 17 00:00:00 2001
From: Kurt Revis <krevis@figma.com>
Date: Mon, 4 Jul 2022 16:33:41 -0700
Subject: [PATCH] Add a regression test for 242294.

---
 JSTests/wasm/regress/242294.js | 51 ++++++++++++++++++++++++++++++++++
 1 file changed, 51 insertions(+)
 create mode 100644 JSTests/wasm/regress/242294.js

diff --git a/JSTests/wasm/regress/242294.js b/JSTests/wasm/regress/242294.js
new file mode 100644
index 000000000000..6a8d07ee1f01
--- /dev/null
+++ b/JSTests/wasm/regress/242294.js
@@ -0,0 +1,51 @@
+//@ requireOptions("--webAssemblyBBQAirModeThreshold=1")
+
+// Regression test for https://bugs.webkit.org/show_bug.cgi?id=242294
+// 
+// Run the same code as in stress/osr-entry-basic.js, just a simple loop.
+// Setting webAssemblyBBQAirModeThreshold=1 ensures that we use the fallback
+// path that forces B3, the same as happens on iOS devices when the wasm
+// module is > 10 MB large.
+
+import Builder from '../Builder.js'
+import * as assert from '../assert.js'
+
+{
+    const b = new Builder();
+    b.Type().End()
+        .Function().End()
+        .Export()
+            .Function("loop")
+        .End()
+        .Code()
+        .Function("loop", { params: ["i32"], ret: "i32" }, ["i32"])
+        .I32Const(0)
+        .SetLocal(1)
+        .Loop("void")
+        .Block("void", b =>
+               b.GetLocal(0)
+               .I32Const(0)
+               .I32Eq()
+               .BrIf(0)
+               .GetLocal(0)
+               .GetLocal(1)
+               .I32Add()
+               .SetLocal(1)
+               .GetLocal(0)
+               .I32Const(1)
+               .I32Sub()
+               .SetLocal(0)
+               .Br(1)
+              )
+        .End()
+        .GetLocal(1)
+        .Return()
+        .End()
+        .End()
+
+    const bin = b.WebAssembly().get();
+    const module = new WebAssembly.Module(bin);
+    const instance = new WebAssembly.Instance(module);
+
+    assert.eq(987459712, instance.exports.loop(100000000));
+}
-- 
2.36.1

